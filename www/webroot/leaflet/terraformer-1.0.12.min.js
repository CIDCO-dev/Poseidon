/*! Terraformer JS - 1.0.12 - 2020-04-07
*   https://github.com/esri/Terraformer
*   Copyright (c) 2013-2020 Environmental Systems Research Institute, Inc.
*   Licensed MIT */
!function(t,e){"object"==typeof module&&"object"==typeof module.exports&&(exports=module.exports=e()),"object"==typeof window&&(t.Terraformer=e())}(this,function(){"use strict";var t={},o=6378137,e=57.29577951308232,r=.017453292519943,i={type:"link",properties:{href:"http://spatialreference.org/ref/sr-org/6928/ogcwkt/",type:"ogcwkt"}};function n(t){return"[object Array]"===Object.prototype.toString.call(t)}function s(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r]);return t}function a(t){if(t.type)switch(t.type){case"Point":return[t.coordinates[0],t.coordinates[1],t.coordinates[0],t.coordinates[1]];case"MultiPoint":case"LineString":return u(t.coordinates);case"MultiLineString":case"Polygon":return c(t.coordinates);case"MultiPolygon":return function(t){for(var e=null,r=null,o=null,n=null,i=0;i<t.length;i++)for(var s=t[i],a=0;a<s.length;a++)for(var c=s[a],u=0;u<c.length;u++){var l=c[u],h=l[0],f=l[1];null===e?e=h:h<e&&(e=h),null===r?r=h:r<h&&(r=h),null===o?o=f:f<o&&(o=f),null===n?n=f:n<f&&(n=f)}return[e,o,r,n]}(t.coordinates);case"Feature":return t.geometry?a(t.geometry):null;case"FeatureCollection":return function(t){for(var e,r=[],o=t.features.length-1;0<=o;o--)e=a(t.features[o].geometry),r.push([e[0],e[1]]),r.push([e[2],e[3]]);return u(r)}(t);case"GeometryCollection":return function(t){for(var e,r=[],o=t.geometries.length-1;0<=o;o--)e=a(t.geometries[o]),r.push([e[0],e[1]]),r.push([e[2],e[3]]);return u(r)}(t);default:throw new Error("Unknown type: "+t.type)}return null}function c(t){for(var e=null,r=null,o=null,n=null,i=0;i<t.length;i++)for(var s=t[i],a=0;a<s.length;a++){var c=s[a],u=c[0],l=c[1];null===e?e=u:u<e&&(e=u),null===r?r=u:r<u&&(r=u),null===o?o=l:l<o&&(o=l),null===n?n=l:n<l&&(n=l)}return[e,o,r,n]}function u(t){for(var e=null,r=null,o=null,n=null,i=0;i<t.length;i++){var s=t[i],a=s[0],c=s[1];null===e?e=a:a<e&&(e=a),null===r?r=a:r<a&&(r=a),null===o?o=c:c<o&&(o=c),null===n?n=c:n<c&&(n=c)}return[e,o,r,n]}function l(t){var e=a(t);return{x:e[0],y:e[1],w:Math.abs(e[0]-e[2]),h:Math.abs(e[1]-e[3])}}function h(t){return t*e}function f(t){return t*r}function p(t){var e=t[0],r=t[1];return[h(e/o)-360*Math.floor((h(e/o)+180)/360),h(Math.PI/2-2*Math.atan(Math.exp(-1*r/o)))]}function y(t){var e=t[0],r=Math.max(Math.min(t[1],89.99999),-89.99999);return[f(e)*o,o/2*Math.log((1+Math.sin(f(r)))/(1-Math.sin(f(r))))]}function d(t,e,r){if("Point"===t.type)t.coordinates=e(t.coordinates);else if("Feature"===t.type)t.geometry=d(t.geometry,e,!0);else if("FeatureCollection"===t.type)for(var o=0;o<t.features.length;o++)t.features[o]=d(t.features[o],e,!0);else if("GeometryCollection"===t.type)for(var n=0;n<t.geometries.length;n++)t.geometries[n]=d(t.geometries[n],e,!0);else t.coordinates=function t(e,r){for(var o=0;o<e.length;o++)"number"==typeof e[o][0]&&(e[o]=r(e[o])),"object"==typeof e[o]&&(e[o]=t(e[o],r));return e}(t.coordinates,e);return r||e===y&&(t.crs=i),e===p&&delete t.crs,t}function g(t){return d(t,y)}function v(t){return d(t,p)}function w(t,e){return t[0]>e[0]?-1:t[0]<e[0]?1:t[1]>e[1]?-1:t[1]<e[1]?1:0}function m(t,e){var r=e[0]-t[0],o=e[1]-t[1];return r*r+o*o}function P(t,e){var r,o,n,i=e;for(var s in t){var a=(r=e,o=i,n=t[s],function(t,e){return t<e?-1:e<t?1:0}((o[0]-r[0])*(n[1]-r[1])-(n[0]-r[0])*(o[1]-r[1]),0));(-1===a||0===a&&m(e,t[s])>m(e,i))&&(i=t[s])}return i}function M(t){if(0===t.length)return[];if(1===t.length)return t;for(var e=[t.sort(w)[0]],r=0;r<e.length;r++){var o=P(t,e[r]);o!==e[0]&&e.push(o)}return e}function T(t,e){for(var r=!1,o=-1,n=t.length,i=n-1;++o<n;i=o)(t[o][1]<=e[1]&&e[1]<t[i][1]||t[i][1]<=e[1]&&e[1]<t[o][1])&&e[0]<(t[i][0]-t[o][0])*(e[1]-t[o][1])/(t[i][1]-t[o][1])+t[o][0]&&(r=!r);return r}function S(t,e){if(t&&t.length){if(1===t.length)return T(t[0],e);if(T(t[0],e)){for(var r=1;r<t.length;r++)if(T(t[r],e))return!1;return!0}return!1}return!1}function C(t,e,r,o){var n=(o[0]-r[0])*(t[1]-r[1])-(o[1]-r[1])*(t[0]-r[0]),i=(e[0]-t[0])*(t[1]-r[1])-(e[1]-t[1])*(t[0]-r[0]),s=(o[1]-r[1])*(e[0]-t[0])-(o[0]-r[0])*(e[1]-t[1]);if(0!=s){var a=n/s,c=i/s;if(0<=a&&a<=1&&0<=c&&c<=1)return!0}return!1}function x(t){return!isNaN(parseFloat(t))&&isFinite(t)}function F(t,e){if(x(t[0][0])){if(x(e[0][0])){for(var r=0;r<t.length-1;r++)for(var o=0;o<e.length-1;o++)if(C(t[r],t[r+1],e[o],e[o+1]))return!0}else for(var n=0;n<e.length;n++)if(F(t,e[n]))return!0}else for(var i=0;i<t.length;i++)if(F(t[i],e))return!0;return!1}function L(t){for(var e=[],r=0;r<t.length;r++){var o=t[r].slice();!1===b(o[0],o[o.length-1])&&o.push(o[0]),e.push(o)}return e}function b(t,e){for(var r=0;r<t.length;r++)if(t[r]!==e[r])return!1;return!0}function G(t,e){if(t.length!==e.length)return!1;for(var r=t.slice().sort(w),o=e.slice().sort(w),n=0;n<r.length;n++){if(r[n].length!==o[n].length)return!1;for(var i=0;i<r.length;i++)if(r[n][i]!==o[n][i])return!1}return!0}var E=["length"];function k(t){if(t)switch(t.type){case"Point":return new O(t);case"MultiPoint":return new V(t);case"LineString":return new j(t);case"MultiLineString":return new H(t);case"Polygon":return new N(t);case"MultiPolygon":return new A(t);case"Feature":return new I(t);case"FeatureCollection":return new J(t);case"GeometryCollection":return new R(t);default:throw new Error("Unknown type: "+t.type)}}function O(t){var e=Array.prototype.slice.call(arguments);if(t&&"Point"===t.type&&t.coordinates)s(this,t);else if(t&&n(t))this.coordinates=t;else{if(!(2<=e.length))throw"Terraformer: invalid input for Terraformer.Point";this.coordinates=e}this.type="Point"}function V(t){if(t&&"MultiPoint"===t.type&&t.coordinates)s(this,t);else{if(!n(t))throw"Terraformer: invalid input for Terraformer.MultiPoint";this.coordinates=t}this.type="MultiPoint"}function j(t){if(t&&"LineString"===t.type&&t.coordinates)s(this,t);else{if(!n(t))throw"Terraformer: invalid input for Terraformer.LineString";this.coordinates=t}this.type="LineString"}function H(t){if(t&&"MultiLineString"===t.type&&t.coordinates)s(this,t);else{if(!n(t))throw"Terraformer: invalid input for Terraformer.MultiLineString";this.coordinates=t}this.type="MultiLineString"}function N(t){if(t&&"Polygon"===t.type&&t.coordinates)s(this,t);else{if(!n(t))throw"Terraformer: invalid input for Terraformer.Polygon";this.coordinates=t}this.type="Polygon"}function A(t){if(t&&"MultiPolygon"===t.type&&t.coordinates)s(this,t);else{if(!n(t))throw"Terraformer: invalid input for Terraformer.MultiPolygon";this.coordinates=t}this.type="MultiPolygon"}function I(t){if(t&&"Feature"===t.type)s(this,t);else{if(!(t&&t.type&&t.coordinates))throw"Terraformer: invalid input for Terraformer.Feature";this.geometry=t}this.type="Feature"}function J(t){if(t&&"FeatureCollection"===t.type&&t.features)s(this,t);else{if(!n(t))throw"Terraformer: invalid input for Terraformer.FeatureCollection";this.features=t}this.type="FeatureCollection"}function R(t){if(t&&"GeometryCollection"===t.type&&t.geometries)s(this,t);else if(n(t))this.geometries=t;else{if(!t.coordinates||!t.type)throw"Terraformer: invalid input for Terraformer.GeometryCollection";this.type="GeometryCollection",this.geometries=[t]}this.type="GeometryCollection"}function U(t,e,r){for(var o=y(t),n=r||64,i={type:"Polygon",coordinates:[[]]},s=1;s<=n;s++){var a=s*(360/n)*Math.PI/180;i.coordinates[0].push([o[0]+e*Math.cos(a),o[1]+e*Math.sin(a)])}return i.coordinates=L(i.coordinates),v(i)}function q(t,e,r){var o=r||64,n=e||250;if(!t||t.length<2||!n||!o)throw new Error("Terraformer: missing parameter for Terraformer.Circle");s(this,new I({type:"Feature",geometry:U(t,n,o),properties:{radius:n,center:t,steps:o}}))}return k.prototype.toMercator=function(){return g(this)},k.prototype.toGeographic=function(){return v(this)},k.prototype.envelope=function(){return l(this)},k.prototype.bbox=function(){return a(this)},k.prototype.convexHull=function(){var t,e,r=[];if("Point"===this.type)return null;if("LineString"===this.type||"MultiPoint"===this.type){if(!(this.coordinates&&3<=this.coordinates.length))return null;r=this.coordinates}else if("Polygon"===this.type||"MultiLineString"===this.type){if(!(this.coordinates&&0<this.coordinates.length))return null;for(t=0;t<this.coordinates.length;t++)r=r.concat(this.coordinates[t]);if(r.length<3)return null}else if("MultiPolygon"===this.type){if(!(this.coordinates&&0<this.coordinates.length))return null;for(t=0;t<this.coordinates.length;t++)for(e=0;e<this.coordinates[t].length;e++)r=r.concat(this.coordinates[t][e]);if(r.length<3)return null}else if("Feature"===this.type){return new k(this.geometry).convexHull()}return new N({type:"Polygon",coordinates:L([M(r)])})},k.prototype.toJSON=function(){var t={};for(var e in this)this.hasOwnProperty(e)&&-1===E.indexOf(e)&&(t[e]=this[e]);return t.bbox=a(this),t},k.prototype.contains=function(t){return new k(t).within(this)},k.prototype.within=function(t){var e,r,o;if("Feature"===t.type&&(t=t.geometry),"Point"===t.type&&"Point"===this.type)return b(this.coordinates,t.coordinates);if("MultiLineString"===t.type&&"Point"===this.type)for(e=0;e<t.coordinates.length;e++){var n={type:"LineString",coordinates:t.coordinates[e]};if(this.within(n))return!0}if(("LineString"===t.type||"MultiPoint"===t.type)&&"Point"===this.type)for(e=0;e<t.coordinates.length;e++){if(this.coordinates.length!==t.coordinates[e].length)return!1;if(b(this.coordinates,t.coordinates[e]))return!0}if("Polygon"===t.type){if("Polygon"===this.type){if(t.coordinates.length===this.coordinates.length)for(e=0;e<this.coordinates.length;e++)if(G(this.coordinates[e],t.coordinates[e]))return!0;return!(!this.coordinates.length||!S(t.coordinates,this.coordinates[0][0]))&&!F(L(this.coordinates),L(t.coordinates))}if("Point"===this.type)return S(t.coordinates,this.coordinates);if("LineString"===this.type||"MultiPoint"===this.type){if(!this.coordinates||0===this.coordinates.length)return!1;for(e=0;e<this.coordinates.length;e++)if(!1===S(t.coordinates,this.coordinates[e]))return!1;return!0}if("MultiLineString"===this.type){for(e=0;e<this.coordinates.length;e++){if(!1===new j(this.coordinates[e]).within(t))return o++,!1}return!0}if("MultiPolygon"===this.type){for(e=0;e<this.coordinates.length;e++){if(!1===new k({type:"Polygon",coordinates:this.coordinates[e]}).within(t))return!1}return!0}}if("MultiPolygon"===t.type){if("Point"===this.type){if(t.coordinates.length)for(e=0;e<t.coordinates.length;e++)if(S(t.coordinates[e],this.coordinates)&&!1===F([this.coordinates],t.coordinates))return!0;return!1}if("Polygon"===this.type){for(e=0;e<this.coordinates.length;e++)if(t.coordinates[e].length===this.coordinates.length)for(r=0;r<this.coordinates.length;r++)if(G(this.coordinates[r],t.coordinates[e][r]))return!0;if(!1===F(this.coordinates,t.coordinates)&&t.coordinates.length){for(e=0;e<t.coordinates.length;e++)o=!1!==S(t.coordinates[e],this.coordinates[0][0]);return o}}else if("LineString"===this.type||"MultiPoint"===this.type)for(e=0;e<t.coordinates.length;e++){var i={type:"Polygon",coordinates:t.coordinates[e]};return!!this.within(i)}else{if("MultiLineString"===this.type){for(e=0;e<this.coordinates.length;e++){if(!1===new j(this.coordinates[e]).within(t))return!1}return!0}if("MultiPolygon"===this.type){for(e=0;e<t.coordinates.length;e++){var s={type:"Polygon",coordinates:t.coordinates[e]};if(!1===this.within(s))return!1}return!0}}}return!1},k.prototype.intersects=function(t){"Feature"===t.type&&(t=t.geometry);var e=new k(t);return!(!this.within(t)&&!e.within(this))||("Point"!==this.type&&"MultiPoint"!==this.type&&"Point"!==t.type&&"MultiPoint"!==t.type?F(this.coordinates,t.coordinates):"Feature"===this.type?new k(this.geometry).intersects(t):(function(){var t=Array.prototype.slice.apply(arguments);void 0!==typeof console&&console.warn&&console.warn.apply(console,t)}("Type "+this.type+" to "+t.type+" intersection is not supported by intersects"),!1))},(O.prototype=new k).constructor=O,((V.prototype=new k).constructor=V).prototype.forEach=function(t){for(var e=0;e<this.coordinates.length;e++)t.apply(this,[this.coordinates[e],e,this.coordinates]);return this},V.prototype.addPoint=function(t){return this.coordinates.push(t),this},V.prototype.insertPoint=function(t,e){return this.coordinates.splice(e,0,t),this},V.prototype.removePoint=function(t){return"number"==typeof t?this.coordinates.splice(t,1):this.coordinates.splice(this.coordinates.indexOf(t),1),this},V.prototype.get=function(t){return new O(this.coordinates[t])},((j.prototype=new k).constructor=j).prototype.addVertex=function(t){return this.coordinates.push(t),this},j.prototype.insertVertex=function(t,e){return this.coordinates.splice(e,0,t),this},j.prototype.removeVertex=function(t){return this.coordinates.splice(t,1),this},((H.prototype=new k).constructor=H).prototype.forEach=function(t){for(var e=0;e<this.coordinates.length;e++)t.apply(this,[this.coordinates[e],e,this.coordinates])},H.prototype.get=function(t){return new j(this.coordinates[t])},((N.prototype=new k).constructor=N).prototype.addVertex=function(t){return this.insertVertex(t,this.coordinates[0].length-1),this},N.prototype.insertVertex=function(t,e){return this.coordinates[0].splice(e,0,t),this},N.prototype.removeVertex=function(t){return this.coordinates[0].splice(t,1),this},N.prototype.close=function(){this.coordinates=L(this.coordinates)},N.prototype.hasHoles=function(){return 1<this.coordinates.length},N.prototype.holes=function(){var t=[];if(this.hasHoles())for(var e=1;e<this.coordinates.length;e++)t.push(new N([this.coordinates[e]]));return t},((A.prototype=new k).constructor=A).prototype.forEach=function(t){for(var e=0;e<this.coordinates.length;e++)t.apply(this,[this.coordinates[e],e,this.coordinates])},A.prototype.get=function(t){return new N(this.coordinates[t])},A.prototype.close=function(){var e=[];return this.forEach(function(t){e.push(L(t))}),this.coordinates=e,this},(I.prototype=new k).constructor=I,((J.prototype=new k).constructor=J).prototype.forEach=function(t){for(var e=0;e<this.features.length;e++)t.apply(this,[this.features[e],e,this.features])},J.prototype.get=function(e){var r;return this.forEach(function(t){t.id===e&&(r=t)}),new I(r)},((R.prototype=new k).constructor=R).prototype.forEach=function(t){for(var e=0;e<this.geometries.length;e++)t.apply(this,[this.geometries[e],e,this.geometries])},R.prototype.get=function(t){return new k(this.geometries[t])},((q.prototype=new k).constructor=q).prototype.recalculate=function(){return this.geometry=U(this.properties.center,this.properties.radius,this.properties.steps),this},q.prototype.center=function(t){return t&&(this.properties.center=t,this.recalculate()),this.properties.center},q.prototype.radius=function(t){return t&&(this.properties.radius=t,this.recalculate()),this.properties.radius},q.prototype.steps=function(t){return t&&(this.properties.steps=t,this.recalculate()),this.properties.steps},q.prototype.toJSON=function(){return k.prototype.toJSON.call(this)},t.Primitive=k,t.Point=O,t.MultiPoint=V,t.LineString=j,t.MultiLineString=H,t.Polygon=N,t.MultiPolygon=A,t.Feature=I,t.FeatureCollection=J,t.GeometryCollection=R,t.Circle=q,t.toMercator=g,t.toGeographic=v,t.Tools={},t.Tools.positionToMercator=y,t.Tools.positionToGeographic=p,t.Tools.applyConverter=d,t.Tools.toMercator=g,t.Tools.toGeographic=v,t.Tools.createCircle=U,t.Tools.calculateBounds=a,t.Tools.calculateEnvelope=l,t.Tools.coordinatesContainPoint=T,t.Tools.polygonContainsPoint=S,t.Tools.arraysIntersectArrays=F,t.Tools.coordinatesContainPoint=T,t.Tools.coordinatesEqual=G,t.Tools.convexHull=M,t.Tools.isConvex=function(t){for(var e,r=0;r<t.length-3;r++){var o=t[r],n=t[r+1],i=t[r+2],s=[n[0]-o[0],n[1]-o[1]],a=i[0]*s[1]-i[1]*s[0]+s[0]*o[1]-s[1]*o[0];if(0===r)e=a<0;else if(e&&0<a||!e&&a<0)return!1}return!0},t.MercatorCRS=i,t.GeographicCRS={type:"link",properties:{href:"http://spatialreference.org/ref/epsg/4326/ogcwkt/",type:"ogcwkt"}},t});